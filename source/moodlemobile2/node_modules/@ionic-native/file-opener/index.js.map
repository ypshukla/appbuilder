{"version":3,"sources":["../../../src/@ionic-native/plugins/file-opener/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,iBAAA,EAAmB,MAAA,EAAO,MAAO,oBAAA,CAAqB;AAExE;;;;;;;;;;;;;;;;;;GAkBG;AASH;IAAgC,8BAAiB;IAAjD;;IAiDA,CAAC;IAhDC;;;;;OAKG;IAMH,yBAAI,GAAJ,UAAK,QAAgB,EAAE,YAAoB;QACzC,MAAM,CAAC;IACT,CAAC;IAED;;;;OAIG;IAMH,8BAAS,GAAT,UAAU,SAAiB;QACzB,MAAM,CAAC;IACT,CAAC;IAED;;;;OAIG;IAMH,mCAAc,GAAd,UAAe,SAAiB;QAC9B,MAAM,CAAC;IACT,CAAC;IACI,qBAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;KACnB,CAAC;IACF,kBAAkB;IACX,yBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IApCA;QALC,OAAO,CAAC;YACP,aAAa,EAAE,QAAQ;YACvB,WAAW,EAAE,SAAS;YACtB,SAAS,EAAE,OAAO;SACnB,CAAC;;;;0CAGD;IAYD;QALC,OAAO,CAAC;YACP,aAAa,EAAE,QAAQ;YACvB,WAAW,EAAE,SAAS;YACtB,SAAS,EAAE,OAAO;SACnB,CAAC;;;;+CAGD;IAYD;QALC,OAAO,CAAC;YACP,aAAa,EAAE,QAAQ;YACvB,WAAW,EAAE,SAAS;YACtB,SAAS,EAAE,OAAO;SACnB,CAAC;;;;oDAGD;IA1CU,UAAU;QARtB,MAAM,CAAC;YACN,UAAU,EAAE,YAAY;YACxB,MAAM,EAAE,6BAA6B;YACrC,SAAS,EAAE,6BAA6B;YACxC,IAAI,EAAE,sDAAsD;YAC5D,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE,iBAAiB,CAAC;SAC5D,CAAC;OAEW,UAAU,CAiDtB;IAAD,iBAAC;CAjDD,AAiDC,CAjD+B,iBAAiB,GAiDhD;SAjDY,UAAU","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\n/**\n * @name File Opener\n * @description\n * This plugin will open a file on your device file system with its default application.\n *\n * @usage\n * ```typescript\n * import { FileOpener } from '@ionic-native/file-opener';\n *\n * constructor(private fileOpener: FileOpener) { }\n *\n * ...\n *\n * this.fileOpener.open('path/to/file.pdf', 'application/pdf')\n *   .then(() => console.log('File is opened'))\n *   .catch(e => console.log('Error opening file', e));\n *\n * ```\n */\n@Plugin({\n  pluginName: 'FileOpener',\n  plugin: 'cordova-plugin-file-opener2',\n  pluginRef: 'cordova.plugins.fileOpener2',\n  repo: 'https://github.com/pwlin/cordova-plugin-file-opener2',\n  platforms: ['Android', 'iOS', 'Windows', 'Windows Phone 8']\n})\n\nexport class FileOpener extends IonicNativePlugin {\n  /**\n   * Open an file\n   * @param {string} filePath File Path\n   * @param {string} fileMIMEType File MIME Type\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    callbackStyle: 'object',\n    successName: 'success',\n    errorName: 'error'\n  })\n  open(filePath: string, fileMIMEType: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Uninstalls a package\n   * @param {string} packageId Package ID\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    callbackStyle: 'object',\n    successName: 'success',\n    errorName: 'error'\n  })\n  uninstall(packageId: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Check if an app is already installed\n   * @param {string} packageId Package ID\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    callbackStyle: 'object',\n    successName: 'success',\n    errorName: 'error'\n  })\n  appIsInstalled(packageId: string): Promise<any> {\n    return;\n  }\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}